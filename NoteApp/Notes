UNIT TEST NOTES

----------------------

* There are three types tests :
  1. Unit : JUnit Mockito
  2. Instrumentation : JUnit Mockito
  3. UI : Expresso

            * Unit Test :
               - Local computer, do not use emulator
               - JVM
               - Very fast
               - JUnit5, Mockito

            * Instrumentation :
               - Similar to local unit tests
               - Need a real device or emulator
               - JUnit4, Mockito (JUnit5 : some dependencies do not working true for now)

            * UI :
               - Simulate a person using your app
               - Literally uses widgets
               - Real device or emulator
               - Expresso

* Android project src folder contains three folders :
    - main
    - androidTest : Mockito, JUnit, Expresso (Instrumentation & UI)
    - test : Mockito, JUnit (Unit)

* Sharing resource between test and androidTest directions :
    - Create test-common directory on src
    - Give the same directory path this directory with test and androidTest (com.bsrakdg.noteapp.utils)
    - Create new class (TestUtil)
    - Create field to share (public static Note NOTE = new Note();)
    - Access the shared field from test and androidTest (private Note note = TestUtil.NOTE;)

* @Before, @BeforeClass, @BeforeEach and @BeforeAll annotations in JUnit 4 and 5 :

    - @Before JUnit4 (@BeforeEach JUnit5) : Methods annotated with the @Before annotation are
    executed before each test. This is useful when we want to execute some common code before running a test.

    - @BeforeClass JUnit4 (@BeforeAll JUnit5)  : When we want to execute an expensive common
    operation before each test, it's preferable to execute it only once before running all tests
    using @BeforeClass. Some examples of common expensive operations are the creation of
    a database connection or the startup of a server.

* blockingGet() for Single, blockingFirst() for Flowable.

*